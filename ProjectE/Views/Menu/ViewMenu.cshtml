@{
    ViewData["Title"] = "Menu";
}
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<style>
    body {
        background-color: #013220;
        color: #f5f5f5;
    }

    .card-menu {
        background-color: #e1e8dd;
        color: #013220;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card-menu:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        }

    .badge-category {
        font-size: 0.9rem;
        padding: 0.3rem 0.6rem;
        margin-bottom: 0.5rem;
        background-color: #198754;
        color: #fff;
    }

    .availability {
        font-weight: bold;
    }

    .available {
        color: #198754;
    }

    .unavailable {
        color: #dc3545;
    }

    h2.text-center {
        color: #fefcf3;
        font-style: italic;
    }

    .card-menu .card-title {
        color: #013220;
    }

    .card-menu .card-text {
        color: #013220;
    }

    .fw-bold.text-success {
        color: #198754;
    }
</style>

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-center fw-bold">🍽️ YallaEat.AI Menu</h2>
        <div>
            <a asp-action="AddMenuItem" class="btn btn-success me-2">➕ إضافة عنصر جديد</a>
            <button class="btn btn-danger" onclick="logout()">🚪 تسجيل الخروج</button>
        </div>
    </div>

    <!-- Filters -->
    <div class="row mb-4 g-2">
        <div class="col-md-4">
            <label class="form-label fw-bold">ابحث حسب الفئة:</label>
            <select id="searchCategory" class="form-select">
                <option value="">-- عرض جميع العناصر --</option>
                <option value="ساندويش">🥪 ساندويش</option>
                <option value="سلطة">🥗 سلطة</option>
                <option value="مشروبات">🥤 مشروبات</option>
                <option value="وجبات رئيسية">🍽 وجبات رئيسية</option>
                <option value="مقبلات">🥟 مقبلات</option>
                <option value="حلويات">🍰 حلويات</option>
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label fw-bold">ابحث بالاسم:</label>
            <input type="text" id="searchName" class="form-control" placeholder="🔍 اكتب اسم العنصر...">
        </div>
    </div>

    <div id="menu-container" class="row g-4 justify-content-center"></div>
</div>

<!-- Modal for editing -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">✏️ تعديل عنصر القائمة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId">
                    <div class="mb-3">
                        <label class="form-label">الاسم</label>
                        <input type="text" id="editName" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الوصف</label>
                        <textarea id="editDescription" class="form-control"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الفئة</label>
                        <input type="text" id="editCategory" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">السعر</label>
                        <input type="number" step="0.01" id="editPrice" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الحجم</label>
                        <select id="editSize" class="form-select">
                            <option value="صغير">صغير</option>
                            <option value="متوسط">متوسط</option>
                            <option value="كبير">كبير</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الحالة</label>
                        <div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="editAvailableRadio" id="editAvailableYes" value="true">
                                <label class="form-check-label text-success" for="editAvailableYes">✅ متوفر</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="editAvailableRadio" id="editAvailableNo" value="false">
                                <label class="form-check-label text-danger" for="editAvailableNo">❌ غير متوفر</label>
                            </div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">💾 حفظ التعديلات</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // ✅ منع الدخول بدون توكين
    document.addEventListener("DOMContentLoaded", function() {
        const token = localStorage.getItem("token");
        if (!token) window.location.href = "/Auth/login";
    });

    function logout() {
        localStorage.removeItem("token");
        localStorage.removeItem("role");
        localStorage.removeItem("userId");
        window.location.href = "/Auth/login";
    }
    let allItems = [];

    function getCategoryArabic(category) {
        switch (category) {
            case "ساندويش": return "🥪 ساندويش";
            case "سلطة": return "🥗 سلطة";
            case "مشروبات": return "🥤 مشروبات";
            case "وجبات رئيسية": return "🍽 وجبات رئيسية";
            case "مقبلات": return "🥟 مقبلات";
            case "حلويات": return "🍰 حلويات";
            default: return category;
        }
    }

    function renderMenu(items) {
        const container = document.getElementById("menu-container");
        container.innerHTML = "";
        if (items.length === 0) {
            container.innerHTML = `<p class="text-center text-muted">⚠️ لا توجد عناصر مطابقة</p>`;
            return;
        }
        items.forEach(item => {
            const card = document.createElement("div");
            card.className = "col-md-4 col-lg-3";
            card.innerHTML = `
                <div class="card card-menu shadow-lg border-0 rounded-4 h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <span class="badge bg-primary badge-category">${getCategoryArabic(item.category)}</span>
                        <h5 class="card-title fw-bold">${item.name}</h5>
                        <p class="card-text">${item.description || "لا يوجد وصف."}</p>
                        <p class="fw-bold text-success">💲 ${item.price.toFixed(2)}</p>
                        <p><strong>الحجم:</strong> ${item.size || "غير محدد"}</p>
                        <p class="availability ${item.isAvailable ? 'available' : 'unavailable'}">
                            ${item.isAvailable ? '✅ متوفر' : '❌ غير متوفر'}
                        </p>
                        <div class="d-flex justify-content-between mt-3">
                            <button class="btn btn-sm btn-warning"
                                onclick="openEdit(${item.id}, '${item.name}', '${item.description || ""}', '${item.category}', ${item.price}, '${item.size}', ${item.isAvailable})">
                                ✏️ تعديل
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteItem(${item.id})">🗑 حذف</button>
                        </div>
                    </div>
                </div>
            `;
            container.appendChild(card);
        });
    }

    function applyFilters() {
        const selectedCategory = document.getElementById("searchCategory").value;
        const nameQuery = document.getElementById("searchName").value.trim().toLowerCase();
        let filtered = allItems;
        if (selectedCategory !== "") filtered = filtered.filter(item => item.category === selectedCategory);
        if (nameQuery !== "") filtered = filtered.filter(item => item.name.toLowerCase().includes(nameQuery));
        renderMenu(filtered);
    }

    async function loadMenu() {
        try {
            const response = await fetch("/api/menu");
            if (!response.ok) throw new Error("فشل تحميل القائمة");
            allItems = await response.json();
            renderMenu(allItems);
        } catch (error) {
            console.error("خطأ في تحميل القائمة:", error);
            document.getElementById("menu-container").innerHTML =
                `<p class="text-danger text-center">⚠️ تعذر تحميل القائمة. حاول مرة أخرى لاحقاً.</p>`;
        }
    }

    document.getElementById("searchCategory").addEventListener("change", applyFilters);
    document.getElementById("searchName").addEventListener("input", applyFilters);

    async function deleteItem(id) {
        if (!confirm("هل أنت متأكد من حذف هذا العنصر؟")) return;
        try {
            const res = await fetch(`/api/menu/${id}`, { method: "DELETE" });
            if (res.ok) loadMenu();
            else alert("❌ فشل حذف العنصر");
        } catch (err) {
            console.error("خطأ الحذف:", err);
        }
    }

    function openEdit(id, name, description, category, price, size, isAvailable) {
        document.getElementById("editId").value = id;
        document.getElementById("editName").value = name;
        document.getElementById("editDescription").value = description;
        document.getElementById("editCategory").value = category;
        document.getElementById("editPrice").value = price;
        document.getElementById("editSize").value = size || "Small";
        if (isAvailable) document.getElementById("editAvailableYes").checked = true;
        else document.getElementById("editAvailableNo").checked = true;
        const modal = new bootstrap.Modal(document.getElementById("editModal"));
        modal.show();
    }

    document.getElementById("editForm").addEventListener("submit", async function (e) {
        e.preventDefault();
        const id = document.getElementById("editId").value;
        const isAvailableValue = document.querySelector('input[name="editAvailableRadio"]:checked').value;
        const item = {
            id: parseInt(id),
            name: document.getElementById("editName").value,
            description: document.getElementById("editDescription").value,
            category: document.getElementById("editCategory").value,
            price: parseFloat(document.getElementById("editPrice").value),
            size: document.getElementById("editSize").value,
            isAvailable: isAvailableValue === 'true'
        };
        try {
            const res = await fetch(`/api/menu/${id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(item)
            });
            if (res.ok) {
                bootstrap.Modal.getInstance(document.getElementById("editModal")).hide();
                loadMenu();
            } else alert("❌ فشل تحديث العنصر");
        } catch (err) {
            console.error("خطأ التحديث:", err);
        }
    });

    loadMenu();
</script>
