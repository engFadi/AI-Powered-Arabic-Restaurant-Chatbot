@{
    ViewData["Title"] = "Register";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<style>
    body {
        background-color: #013220; /* dark green */
        font-family: 'Poppins', sans-serif;
        overflow: hidden;
        position: relative;
    }

    /* 🔹 Watermark container */
    .watermark {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: 0;
        pointer-events: none;
        overflow: hidden;
    }

        .watermark span {
            position: absolute;
            font-size: 3rem;
            font-weight: bold;
            color: rgba(255, 255, 255, 0.06);
            white-space: nowrap;
            transform: rotate(-45deg);
            animation: slideWatermark 60s linear infinite;
        }

    /* 🔹 Animate watermark */
    @@keyframes slideWatermark {
        0% {
            transform: rotate(-45deg) translate(0, 0);
        }

        100% {
            transform: rotate(-45deg) translate(-200px, -200px);
        }
    }

    /* 🔹 Card styles */
    .card {
        background-color: rgba(255, 255, 255, 0.92);
        border-radius: 15px;
        width: 400px; /* responsive width */
        max-width: 400px; /* suitable max width */
        min-width: 300px; /* prevent too small */
        padding: 2rem;
        z-index: 1;
        position: relative;
        box-shadow: 0 8px 20px rgba(0,0,0,0.25);
    }

    .error-message {
        color: #dc3545;
        font-size: 0.875em;
        display: none;
    }

    .is-invalid {
        border-color: #dc3545;
    }

    .yallaeat-footer {
        font-size: 0.9rem;
        font-weight: 500;
        color: #28a745;
        text-align: center;
        margin-top: 12px;
        z-index: 1;
        position: relative;
    }
</style>

<!-- Watermark background -->
<div class="watermark" id="watermark"></div>

<div class="d-flex justify-content-center align-items-center vh-100">
    <div>
        <div class="card shadow-lg">
            <h3 class="text-center mb-4">انشئ حساب</h3>

            <form id="registerForm" novalidate>
                <div class="mb-3">
                    <label for="username" class="form-label">اسم المستخدم</label>
                    <input type="text" id="username" class="form-control" placeholder="اختار اسم للمستخدم" />
                    <span class="error-message" id="usernameError"></span>
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">البريد الألكتروني</label>
                    <input type="email" id="email" class="form-control" placeholder="ادخل بريدك الألكتروني" />
                    <span class="error-message" id="emailError"></span>
                </div>

                <div class="mb-3">
                    <label for="phoneNumber" class="form-label">رقم الهاتف</label>
                    <input type="tel" id="phoneNumber" class="form-control" placeholder="ادخل رقم الهاتف" style="text-align: right; direction: rtl;" />
                    <span class="error-message" id="phoneNumberError"></span>
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">كلمة المرور</label>
                    <input type="password" id="password" class="form-control" placeholder="ادخل كلمة المرور" />
                    <span class="error-message" id="passwordError"></span>
                </div>

                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">أكد كلمة المرور</label>
                    <input type="password" id="confirmPassword" class="form-control" placeholder="أكد  كلمة المرور" />
                    <span class="error-message" id="confirmPasswordError"></span>
                </div>

                <button type="submit" class="btn btn-success w-100">انشئ الحساب</button>
            </form>

            <div id="message" class="alert mt-3 text-center d-none"></div>

            <div class="text-center mt-3">
                <p>هل لديك حسا من قبل؟ <a href="@Url.Action("Login", "Auth")">تسجيل الدخول</a></p>
            </div>
        </div>

        <div class="yallaeat-footer">
            YallaEat.<span style="color:#20c997;">AI</span>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const watermark = document.getElementById('watermark');
            const rows = Math.ceil(window.innerHeight / 200);
            const cols = Math.ceil(window.innerWidth / 400);

            // 🔹 Generate watermark spans dynamically
            for (let r = 0; r <= rows; r++) {
                for (let c = 0; c <= cols; c++) {
                    const span = document.createElement('span');
                    span.innerText = "YallaEat.AI ";
                    span.style.top = `${r * 200}px`;
                    span.style.left = `${c * 400}px`;
                    watermark.appendChild(span);
                }
            }

            // 🔹 Form validation
            const form = document.getElementById('registerForm');
            form.addEventListener('submit', function (event) {
                event.preventDefault();
                if (validateForm()) register();
            });
        });

        function validateForm() {
            let isValid = true;
            document.querySelectorAll('.error-message').forEach(span => span.style.display = 'none');
            document.querySelectorAll('.form-control').forEach(input => input.classList.remove('is-invalid'));

            const username = document.getElementById('username');
            const email = document.getElementById('email');
            const phoneNumber = document.getElementById('phoneNumber');
            const password = document.getElementById('password');
            const confirmPassword = document.getElementById('confirmPassword');

            if (username.value.trim().length < 3) {
                showError('usernameError', 'Username must be at least 3 characters.');
                isValid = false;
            }

            const phoneRegex = /^\d{7,}$/;
            if (!phoneRegex.test(phoneNumber.value.trim())) {
                showError('phoneNumberError', 'Please enter a valid phone number (at least 7 digits).');
                isValid = false;
            }

            if (password.value.length < 8) {
                showError('passwordError', 'Password must be at least 8 characters.');
                isValid = false;
            }

            if (password.value !== confirmPassword.value) {
                showError('confirmPasswordError', 'Passwords do not match.');
                isValid = false;
            }

            return isValid;
        }

        function showError(errorElementId, message) {
            const errorSpan = document.getElementById(errorElementId);
            const inputId = errorElementId.replace('Error', '');
            document.getElementById(inputId).classList.add('is-invalid');
            errorSpan.textContent = message;
            errorSpan.style.display = 'block';
        }

        async function register() {
            const messageDiv = document.getElementById("message");
            messageDiv.classList.add("d-none");
            messageDiv.innerText = "";

            const username = document.getElementById("username").value.trim();
            const email = document.getElementById("email").value.trim();
            const phoneNumber = document.getElementById("phoneNumber").value.trim();
            const password = document.getElementById("password").value;
            const confirmPassword = document.getElementById("confirmPassword").value;

            try {
                const response = await fetch("/api/auth/register", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ username, email, phoneNumber, password, confirmPassword })
                });

                const result = await response.json();

                if (response.ok) {
                    showMessage(result.message, "success");
                    const registeredUsername = result.username;
                    setTimeout(() => {
                        window.location.href = `/Auth/Login?username=${encodeURIComponent(registeredUsername)}`;
                    }, 2000);
                } else {
                    let errorMessage = result.message || "Registration failed.";
                    if (result.errors) errorMessage = Object.values(result.errors).flat().join('\n');
                    showMessage(errorMessage, "danger");
                }
            } catch {
                showMessage("An error occurred. Please try again.", "danger");
            }
        }

        function showMessage(text, type) {
            const messageDiv = document.getElementById("message");
            messageDiv.innerText = text;
            messageDiv.className = `alert alert-${type} mt-3 text-center`;
            messageDiv.classList.remove("d-none");
        }
    </script>
}
